[{"title":"Sorting Algorithms","date":"2024-06-28T00:00:00.000Z","tags":["algorithms","sorting","computer-science"],"summary":"This article explores time complexity in algorithms, explaining how it measures the efficiency and performance of different algorithms based on input size.","authors":["default"],"type":"Blog","readingTime":{"text":"12 min read","minutes":11.725,"time":703500,"words":2345},"slug":"4.sorting-algorithmss","path":"blog/4.sorting-algorithmss","filePath":"blog/4.sorting-algorithmss.mdx","toc":[{"value":"Sorting Algorithms","url":"#sorting-algorithms","depth":1},{"value":"Bubble Sort","url":"#bubble-sort","depth":2},{"value":"Selection Sort","url":"#selection-sort","depth":2},{"value":"Insertion Sort","url":"#insertion-sort","depth":2},{"value":"Merge Sort","url":"#merge-sort","depth":2},{"value":"Quick Sort","url":"#quick-sort","depth":2},{"value":"Heap Sort","url":"#heap-sort","depth":2},{"value":"Sorting Algorithms in Linear time","url":"#sorting-algorithms-in-linear-time","depth":1},{"value":"Counting Sort","url":"#counting-sort","depth":2},{"value":"Radix Sort","url":"#radix-sort","depth":2},{"value":"Bucket Sort","url":"#bucket-sort","depth":2},{"value":"BruteForce","url":"#bruteforce","depth":1},{"value":"Sequential Search","url":"#sequential-search","depth":2},{"value":"String matching","url":"#string-matching","depth":2},{"value":"Greedy","url":"#greedy","depth":1},{"value":"Activity Selection","url":"#activity-selection","depth":2},{"value":"Dynamic","url":"#dynamic","depth":1},{"value":"Longest Common Subsequence","url":"#longest-common-subsequence","depth":2},{"value":"Matrix Chain multiplication","url":"#matrix-chain-multiplication","depth":2},{"value":"KnapSack Algorithms","url":"#knapsack-algorithms","depth":1},{"value":"KnapSack 01","url":"#knapsack-01","depth":2},{"value":"BruteForce","url":"#bruteforce-1","depth":3},{"value":"Dynamic","url":"#dynamic-1","depth":3},{"value":"KnapSack Fraction","url":"#knapsack-fraction","depth":2},{"value":"BruteForce","url":"#bruteforce-2","depth":3},{"value":"Greedy","url":"#greedy-1","depth":3},{"value":"Test Case","url":"#test-case","depth":1},{"value":"Test Case for Above sorting Algorithms","url":"#test-case-for-above-sorting-algorithms","depth":2},{"value":"Test Case for linear sorting Algorithms","url":"#test-case-for-linear-sorting-algorithms","depth":2}],"structuredData":{"@context":"https://schema.org","@type":"BlogPosting","headline":"Sorting Algorithms","datePublished":"2024-06-28T00:00:00.000Z","dateModified":"2024-06-28T00:00:00.000Z","description":"This article explores time complexity in algorithms, explaining how it measures the efficiency and performance of different algorithms based on input size.","image":"/static/images/twitter-card.png","url":"https://tailwind-nextjs-starter-blog.vercel.app/blog/4.sorting-algorithmss"}},{"title":"Time Complexity of Algorithms","date":"2024-06-27T00:00:00.000Z","tags":["algorithms","time-complexity","computational-efficiency","computer-science"],"summary":"This article explores time complexity in algorithms, explaining how it measures the efficiency and performance of different algorithms based on input size.","authors":["default","sparrowhawk"],"type":"Blog","readingTime":{"text":"7 min read","minutes":6.52,"time":391200,"words":1304},"slug":"3.Time-complexity","path":"blog/3.Time-complexity","filePath":"blog/3.Time-complexity.mdx","toc":[{"value":"Complexity","url":"#complexity-10","depth":1},{"value":"Different Data Structure","url":"#different-data-structure-10","depth":1},{"value":"Comparison Sort","url":"#comparison-sort-10","depth":1},{"value":"Greedy algorithms","url":"#greedy-algorithms-10","depth":1},{"value":"Sorting in linear time","url":"#sorting-in-linear-time-10","depth":1},{"value":"Explanation:","url":"#explanation-20","depth":2},{"value":"Dynamic Programming","url":"#dynamic-programming-10","depth":1},{"value":"Explanation:","url":"#explanation-21","depth":3}],"structuredData":{"@context":"https://schema.org","@type":"BlogPosting","headline":"Time Complexity of Algorithms","datePublished":"2024-06-27T00:00:00.000Z","dateModified":"2024-06-27T00:00:00.000Z","description":"This article explores time complexity in algorithms, explaining how it measures the efficiency and performance of different algorithms based on input size.","image":"/static/images/twitter-card.png","url":"https://tailwind-nextjs-starter-blog.vercel.app/blog/3.Time-complexity"}},{"title":"Components of Embedded OS","date":"2024-06-25T00:00:00.000Z","tags":["os","embedded"],"summary":"A comprehensive guide to understanding and using the .gitignore file in Git, including syntax, common patterns, and best practices.","type":"Blog","readingTime":{"text":"3 min read","minutes":2.775,"time":166500,"words":555},"slug":"2.Components-of-embedded-os","path":"blog/2.Components-of-embedded-os","filePath":"blog/2.Components-of-embedded-os.mdx","toc":[{"value":"Components","url":"#components-1","depth":1},{"value":"1. User Application Code","url":"#1-user-application-code-1","depth":2},{"value":"2. Standard C Library","url":"#2-standard-c-library-1","depth":2},{"value":"3. I/O System (Device Drivers)","url":"#3-io-system-device-drivers-1","depth":2},{"value":"4. Kernel","url":"#4-kernel-1","depth":2},{"value":"5. Hardware Abstraction Layer (HAL)","url":"#5-hardware-abstraction-layer-hal-1","depth":2},{"value":"Summary","url":"#summary-1","depth":1}],"structuredData":{"@context":"https://schema.org","@type":"BlogPosting","headline":"Components of Embedded OS","datePublished":"2024-06-25T00:00:00.000Z","dateModified":"2024-06-25T00:00:00.000Z","description":"A comprehensive guide to understanding and using the .gitignore file in Git, including syntax, common patterns, and best practices.","image":"/static/images/twitter-card.png","url":"https://tailwind-nextjs-starter-blog.vercel.app/blog/2.Components-of-embedded-os"}},{"title":"Understanding the .gitignore File in Git","date":"2024-06-24T00:00:00.000Z","tags":["git","gitignore","tutorial","git-basics"],"summary":"A comprehensive guide to understanding and using the .gitignore file in Git, including syntax, common patterns, and best practices.","images":["/static/images/gitignore.png"],"type":"Blog","readingTime":{"text":"7 min read","minutes":6.38,"time":382800,"words":1276},"slug":"1.Understanding-the-gitignore","path":"blog/1.Understanding-the-gitignore","filePath":"blog/1.Understanding-the-gitignore.mdx","toc":[{"value":"Introduction to Git and Version Control","url":"#introduction-to-git-and-version-control-2","depth":1},{"value":"Benefits of Using .gitignore","url":"#benefits-of-using-gitignore-2","depth":2},{"value":"Basic Syntax and Rules","url":"#basic-syntax-and-rules-2","depth":1},{"value":"Common Patterns","url":"#common-patterns-2","depth":2},{"value":"Ignoring Specific Files","url":"#ignoring-specific-files-2","depth":2},{"value":"Ignoring Folders","url":"#ignoring-folders-2","depth":2},{"value":"Ignoring Patterns","url":"#ignoring-patterns-2","depth":2},{"value":"Ignoring Files and Folders Except Specific Ones","url":"#ignoring-files-and-folders-except-specific-ones-2","depth":2},{"value":"Ignoring Hidden Files and Directories","url":"#ignoring-hidden-files-and-directories-2","depth":2},{"value":"Ignoring Files in Specific Paths","url":"#ignoring-files-in-specific-paths-2","depth":2},{"value":"Ignoring with Specific Depth","url":"#ignoring-with-specific-depth-2","depth":2},{"value":"Practical Examples","url":"#practical-examples-4","depth":2},{"value":"Using Escape Characters","url":"#using-escape-characters-2","depth":2},{"value":"Using Quotes","url":"#using-quotes-2","depth":2},{"value":"Practical Examples","url":"#practical-examples-5","depth":2},{"value":"Complex Examples","url":"#complex-examples-2","depth":2},{"value":"Depth-Specific Examples","url":"#depth-specific-examples-2","depth":2},{"value":"Creating and Managing a .gitignore File","url":"#creating-and-managing-a-gitignore-file-2","depth":1},{"value":"Creating a .gitignore File","url":"#creating-a-gitignore-file-2","depth":2},{"value":"Managing the .gitignore File","url":"#managing-the-gitignore-file-2","depth":2},{"value":"Best Practices","url":"#best-practices-2","depth":2},{"value":"Common Use Cases and Examples","url":"#common-use-cases-and-examples-2","depth":1},{"value":"Ignoring Build Artifacts","url":"#ignoring-build-artifacts-2","depth":1},{"value":"Ignoring Temporary Files","url":"#ignoring-temporary-files-2","depth":2},{"value":"Ignoring Sensitive Information","url":"#ignoring-sensitive-information-2","depth":2},{"value":"Specific Examples for Different Languages and Frameworks","url":"#specific-examples-for-different-languages-and-frameworks-2","depth":2}],"structuredData":{"@context":"https://schema.org","@type":"BlogPosting","headline":"Understanding the .gitignore File in Git","datePublished":"2024-06-24T00:00:00.000Z","dateModified":"2024-06-24T00:00:00.000Z","description":"A comprehensive guide to understanding and using the .gitignore file in Git, including syntax, common patterns, and best practices.","image":"/static/images/gitignore.png","url":"https://tailwind-nextjs-starter-blog.vercel.app/blog/1.Understanding-the-gitignore"}}]